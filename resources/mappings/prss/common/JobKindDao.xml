<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.neusoft.prss.common.dao.JobKindDao">
	<resultMap type="com.neusoft.prss.common.entity.JobKind" id="kindMap">
		<id column="reskind" property="kindCode"/>
		<result column="kindname" property="kindName"/>
		<collection property="typeList" ofType="com.neusoft.prss.common.entity.JobType" javaType="java.util.List">
			<id column="restype" property="typeCode"/>
			<result column="typename" property="typeName"/>
		</collection>
	</resultMap>
	<select id="getJobKindByOffice" resultMap="kindMap">
		select distinct a.reskind, a.kindname, b.restype, b.typename
		  from dim_reskind a, dim_restype b
		 where a.reskind = b.reskind(+)
		   and a.depid = #{officeId}
	</select>
	
	<select id="getJobKindByRole" resultMap="kindMap">
	SELECT distinct b.reskind, b.kindname, c.restype, c.typename
	  FROM sys_role t
	  join sys_office a
	    on t.office_id = a.id
	  join dim_reskind b
	    on b.depid = a.id
	  left join dim_restype c
	    on b.reskind = c.reskind
	 WHERE t.id in 
	 <trim prefix="(" suffix=")" suffixOverrides=",">
		 <foreach collection="roles" item="item">
		 	'${item.id}',
		 </foreach>
	 </trim>
	union
	SELECT distinct b.reskind, b.kindname, c.restype, c.typename
	  FROM sys_role t
	  join sys_office a
	    on a.parent_ids like '%' || t.office_id || '%'
	  join dim_reskind b
	    on b.depid = a.id
	  left join dim_restype c
	    on b.reskind = c.reskind
	 WHERE t.id in 
	 <trim prefix="(" suffix=")" suffixOverrides=",">
		 <foreach collection="roles" item="item">
		 	'${item.id}',
		 </foreach>
	 </trim>
	</select>
</mapper>