<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.neusoft.prss.rule.dao.TaskAllotRuleDao">
	<resultMap type="com.neusoft.prss.rule.entity.RuleInfo" id="RuleInfo">
		<id column="ID" property="id" />
		<result column="COLIDS" property="colids"/>
		<result column="RULE" property="rule"/>
		<result column="IF_MANUAL" property="ifManual"/>
		<result column="IF_VALID" property="ifValid"/>
		<result column="CREATE_TIME" property="createTime"/>
		<result column="CREATE_NAME" property="createUser"/>
		<result column="UPDATE_TIME" property="updateTime"/>
		<result column="UPDATE_NAME" property="updateUser"/>
		<result column="NAME" property="name"/>
		<result column="DESCRIPTION" property="description"/>
		<result column="TEXT" property="text"/>
		<result column="DRL_STR" property="drlStr"/>
		<result column="RULE_EXT" property="ruleExt"/>
	</resultMap>
	
	<insert id="insertRuleInfo" parameterType="com.neusoft.prss.rule.entity.RuleInfo" useGeneratedKeys="true" keyProperty="id">
		<selectKey keyProperty="id" resultType="String" order="BEFORE" >
        	select RM_RULE_INFO_S.NEXTVAL as id from dual
		</selectKey>
		INSERT INTO RM_RULE_INFO (ID, COLIDS, RULE, IF_MANUAL, IF_VALID, CREATE_TIME, CREATE_USER, NAME, DESCRIPTION, TEXT, DRL_STR, RULE_EXT) 
		VALUES (
			#{id},
			#{colids, jdbcType=VARCHAR},
			#{rule, jdbcType=VARCHAR},
			#{ifManual, jdbcType=INTEGER},
			#{ifValid, jdbcType=INTEGER},
			sysdate, 
			#{createUser, jdbcType=VARCHAR},
			#{name, jdbcType=VARCHAR},
			#{description, jdbcType=VARCHAR},
			#{text, jdbcType=VARCHAR},
			#{drlStr, jdbcType=VARCHAR},
			#{ruleExt, jdbcType=VARCHAR}
		)
	</insert>
	
	<update id="updateRuleInfo" parameterType="com.neusoft.prss.rule.entity.RuleInfo">
		UPDATE RM_RULE_INFO SET 
			COLIDS=#{colids, jdbcType=VARCHAR}, 
			RULE=#{rule, jdbcType=VARCHAR}, 
			IF_MANUAL=#{ifManual, jdbcType=INTEGER}, 
			IF_VALID=#{ifValid, jdbcType=INTEGER}, 
			UPDATE_TIME=sysdate, 
			UPDATE_USER=#{updateUser, jdbcType=VARCHAR}, 
			NAME=#{name, jdbcType=VARCHAR}, 
			DESCRIPTION=#{description, jdbcType=VARCHAR}, 
			TEXT=#{text, jdbcType=VARCHAR}, 
			DRL_STR=#{drlStr, jdbcType=VARCHAR}, 
			RULE_EXT=#{ruleExt, jdbcType=VARCHAR}
		where id = #{id}
	</update>
	
	<delete id="deleteRuleInfo" parameterType="String">
		delete from RM_RULE_INFO where id = #{ruleId}
	</delete>
	
	<insert id="insertRuleDatavalueRel" parameterType="java.util.List">
		insert all
		<foreach collection="list" item="tabdata" index="index">
			INTO RM_RULE_DATAVALUE_REL (RULE_ID, DATA_TYPE, VAL) 
			VALUES (
				#{tabdata.ruleId}, 
				#{tabdata.dataType}, 
				#{tabdata.val}
			)
		</foreach>
		select 1 from dual
	</insert>
	
	<delete id="deleteRuleDatavalueRel" parameterType="String">
		delete from RM_RULE_DATAVALUE_REL where rule_id = #{ruleId}
	</delete>
	
	
	<select id="loadRuleInfo" parameterType="String" resultMap="RuleInfo">
		select A.ID, 
			A.COLIDS, 
			A.RULE, 
			A.IF_MANUAL, 
			A.IF_VALID, 
			A.CREATE_TIME, 
			A.CREATE_USER, 
			A.UPDATE_TIME, 
			A.UPDATE_USER, 
			A.NAME, 
			A.DESCRIPTION, 
			A.TEXT, 
			A.DRL_STR, 
			A.RULE_EXT, 
			B.NAME CREATE_NAME, 
			C.NAME UPDATE_NAME 
		from RM_RULE_INFO a
		left join sys_user b on a.create_user = b.id
		left join sys_user c on a.update_user = c.id
		where a.id = #{ruleId}
	</select>
	
	<select id="loadAtcactype" resultType="Map">
		SELECT TODB_ACTYPE_CODE code,TODB_ACTYPE_CODE description FROM DIM_ACTYPE   ORDER BY CODE       
	</select>
	
	<select id="loadAirline" resultType="Map">
		select AIRLINE_CODE code, DESCRIPTION_CN||'【'||AIRLINE_CODE||'】' description from dim_airlines    ORDER BY description
	</select>
	
	<select id="loadRuleDataValueRel" parameterType="String" resultType="Map">
		select * from RM_RULE_DATAVALUE_REL where rule_id = #{ruleId}
	</select>
	
	<select id="getRuleListCount" resultType="int" parameterType="Map">
		SELECT COUNT(*) FROM RM_RULE_INFO A,SYS_USER B 
		WHERE A.CREATE_USER = B.ID
		AND A.ID IN (SELECT RULE_ID FROM JM_RULE_PROC_REL)
		<if test='userId != "1"'>
			AND B.OFFICE_ID=#{officeId}
		</if>
		<if test="name!=null and name!=''"><![CDATA[ and a.name like '%'||#{name}||'%' ]]> </if>
	</select>
	
	<select id="getRuleList" resultType="Map" parameterType="Map">
		SELECT * FROM (
		SELECT A.ID,
		       A.COLIDS,
		       A.RULE,
		       A.IF_MANUAL,
		       A.IF_VALID,
		       TO_CHAR(A.CREATE_TIME, 'SYYYY-MM-DD HH24:MI:SS') CREATE_TIME,
		       A.CREATE_USER,
		       TO_CHAR(A.UPDATE_TIME, 'SYYYY-MM-DD HH24:MI:SS') UPDATE_TIME,
		       A.UPDATE_USER,
		       A.NAME,
		       A.DESCRIPTION,
		       A.TEXT,
		       A.DRL_STR,
		       A.RULE_EXT,
		       B.NAME CREATE_NAME,
		       C.NAME OFFICE_NAME ,
		       ROW_NUMBER()OVER(ORDER BY A.ID DESC) NUM
		  FROM RM_RULE_INFO A,SYS_USER B,SYS_OFFICE C
		 WHERE A.CREATE_USER = B.ID
		 AND B.OFFICE_ID=C.ID
		 AND  A.ID IN (SELECT RULE_ID FROM JM_RULE_PROC_REL)
		<if test='userId != "1"'>
			AND B.OFFICE_ID=#{officeId}
		</if>
		<if test="name!=null and name!=''"><![CDATA[ and a.name like '%'||#{name}||'%' ]]> </if>
		 ORDER BY NUM )
		 WHERE <![CDATA[NUM>#{begin} AND NUM<=#{end}]]>
	</select>
	
	<!-- 规则流程关系 -->
	<insert id="addRuleRelProcInfo" parameterType="com.neusoft.prss.rule.entity.RuleRelProcVO">
		<selectKey resultType="string" keyProperty="ruleProcId" order="BEFORE">  
	         SELECT JM_RULE_PROC_REL_S.nextval AS ruleProcId   from dual
	    </selectKey> 
	    INSERT INTO JM_RULE_PROC_REL (
			RULE_PROC_ID,
			RULE_ID,
			PROC_ID,
			SORT_NUM,
			ARRANGE_TM,
			VARIABLE_ID,
			ARRANGE_TM_CN
		) VALUES (
			#{ruleProcId},
			#{ruleId},
			#{procId},
			#{sortNum},
			#{arrangeTm},
			#{variableId},
			#{arrangeTmCN}
		)
	</insert>
	<!-- 更新规则流程关系 -->
	<update id="updateRuleRelProcInfo" parameterType="com.neusoft.prss.rule.entity.RuleRelProcVO">
		UPDATE JM_RULE_PROC_REL 
			SET RULE_ID=#{ruleId},
				PROC_ID=#{procId},
				SORT_NUM=#{sortNum},
				ARRANGE_TM=#{arrangeTm},
				VARIABLE_ID=#{variableId},
				ARRANGE_TM_CN=#{arrangeTmCN}
		WHERE RULE_PROC_ID=#{ruleProcId}
	</update>
	<!-- 规则节点关系 -->
	<insert id="addRuleRelNodeInfoAll" parameterType="java.util.List">
		INSERT INTO JM_RULE_NODE_REL (RULE_PROC_NODE_ID,RULE_PROC_ID,NODE_ID,STANDARD_TM,VARIABLE_ID,SORT_NUM)
		SELECT  JM_RULE_NODE_REL_S.NEXTVAL, A.* FROM (
		<foreach collection="list" item="item" index="index" separator=" UNION ALL ">
			SELECT 
				'${item.ruleProcId}' ruleProcId, 
				'${item.nodeId}' nodeId, 
				'${item.nodeTime}' nodeTime,
				'${item.variableId}' variableId,
				'${item.nodeSeq}' nodeSeq
			FROM DUAL
		</foreach>
		) A
	</insert>
	<insert id="addRuleRelNodeInfo" parameterType="com.alibaba.fastjson.JSONObject">
		INSERT INTO JM_RULE_NODE_REL (RULE_PROC_NODE_ID,RULE_PROC_ID,NODE_ID,STANDARD_TM,VARIABLE_ID,SORT_NUM,STANDARD_TM_CN)
		VALUES(JM_RULE_NODE_REL_S.NEXTVAL, #{ruleProcId},#{nodeId} ,#{nodeTime},#{nodeTimeVar},#{nodeSeq},#{nodeTimeCN})
	</insert>
	<update id="updateRuleRelNodeInfo" parameterType="com.alibaba.fastjson.JSONObject">
		UPDATE JM_RULE_NODE_REL
		SET RULE_PROC_ID=#{ruleProcId},NODE_ID=#{nodeId} ,
			STANDARD_TM=#{nodeTime},VARIABLE_ID=#{nodeTimeVar},SORT_NUM=#{nodeSeq},STANDARD_TM_CN=#{nodeTimeCN}
		WHERE RULE_PROC_NODE_ID=#{nodeRuleId}
	</update>
	<!-- 删除规则节点关系 -->
	<delete id="delRuleRelNodeInfo" parameterType="string">
		DELETE FROM JM_RULE_NODE_REL 
		WHERE RULE_PROC_ID IN (SELECT RULE_PROC_ID FROM  JM_RULE_PROC_REL WHERE RULE_ID=#{ruleId})
	</delete>
	<delete id="delRuleRelNodeInfoBatch" parameterType="string">
		DELETE FROM JM_RULE_NODE_REL 
		WHERE RULE_PROC_ID IN (${ruleProcId})
	</delete>
	<!-- 删除规则流程关系 -->
	<delete id="delRuleRelProcInfo" parameterType="string">
		DELETE FROM   JM_RULE_PROC_REL WHERE RULE_ID=#{ruleId}
	</delete>
	<delete id="delRuleRelProcInfoBatch" parameterType="string">
		DELETE FROM   JM_RULE_PROC_REL WHERE RULE_PROC_ID IN (${ruleProcId})
	</delete>
	<!-- 获取规则流程节点关系 -->
	<resultMap type="com.alibaba.fastjson.JSONObject" id="ruleProcNode">
		<result property="jobType" column="JOB_TYPE" javaType="String"/>
		<collection property="procList" javaType="com.alibaba.fastjson.JSONArray" ofType="com.alibaba.fastjson.JSONObject">
			<result property="ruleProcId" column="RULE_PROC_ID" javaType="String"/>
			<result property="ruleId" column="RULE_ID" javaType="String"/>
			<result property="procId" column="PROC_ID" javaType="String"/>
			<result property="sortNum" column="SORT_NUM" javaType="String"/>
			<result property="arrangeTm" column="ARRANGE_TM" javaType="String"/>
			<result property="variableId" column="VARIABLE_ID" javaType="String"/>
			<collection property="nodeList"  javaType="com.alibaba.fastjson.JSONArray" ofType="com.alibaba.fastjson.JSONObject">
				<result property="ruleProcNodeId" column="RULE_PROC_NODE_ID" javaType="String"/>
				<result property="nodeId" column="NODE_ID" javaType="String"/>
				<result property="nodeStandardTm" column="NODE_STANDARD_TM" javaType="String"/>
				<result property="nodeVariableId" column="NODE_VARIABLE_ID" javaType="String"/>
				<result property="nodeSortNum" column="NODE_SORT_NUM" javaType="String"/>
			</collection>
		</collection>
	</resultMap>
	<select id="getRuleProcNodeInfo" parameterType="string" resultMap="ruleProcNode" >
		SELECT D.JOB_TYPE,
		   A.RULE_PROC_ID,
	       A.RULE_ID,
	       A.PROC_ID,
	       A.SORT_NUM,
	       A.ARRANGE_TM_CN ARRANGE_TM,
	       A.VARIABLE_ID,
	       B.RULE_PROC_NODE_ID,
	       B.NODE_ID,
	       B.STANDARD_TM_CN       NODE_STANDARD_TM,
	       B.VARIABLE_ID       NODE_VARIABLE_ID,
	       B.SORT_NUM          NODE_SORT_NUM
	  FROM JM_RULE_PROC_REL A, JM_RULE_NODE_REL B, RM_RULE_INFO C,WF_PROCESS D
	 WHERE A.RULE_ID = C.ID
	   AND A.RULE_PROC_ID = B.RULE_PROC_ID
	   AND A.PROC_ID=D.ID
	   AND C.ID = #{ruleId}
	 ORDER BY SORT_NUM,NODE_SORT_NUM
	</select>
	<!-- 判断规则是否已生成任务 -->
	<select id="checkRuleIfHaveTask" parameterType="string" resultType="int">
		SELECT COUNT(1)
		  FROM JM_TASK A, JM_RULE_PROC_REL B
		 WHERE A.RULE_PROC_ID = B.RULE_PROC_ID
		   AND A.DEL_FLAG <![CDATA[ <> ]]> 1
		   AND B.RULE_ID = #{ruleId}
	</select>
	<!-- 判断流程模板是否被绑定到规则 -->
	<select id="getRuleCountByProc" parameterType="string" resultType="int">
		select count(1) from jm_rule_proc_rel where proc_id=#{procId}
	</select>
	<!-- 获取任务分配时间所用参数列表 -->
	<select id="getVarList" resultType="com.alibaba.fastjson.JSONObject">
		SELECT COL_DESC AS "name", COL_ALIAS AS "en", ID AS "no"
		  FROM SYS_GRID_COLUMN
		 WHERE TAB_ID IN (SELECT ID FROM SYS_GRID_TABLE WHERE SCHEMA_ID = 23)
		 ORDER BY ID
	</select>
</mapper>