<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.neusoft.prss.taskmonitor.dao.TaskMonitor5Dao">
	
	<select id="getPersonTaskData" resultType="hashmap">
		select * from JM_JWGSHETJW_OPERATOR_JK_V t
		<where>
			1=1
			<if test="isPart == 1">
				and if_off = 0
			</if>
			<if test="dayOrNight!=null and dayOrNight!='' ">
				and DAY_OR_NIGHT = #{dayOrNight}
			</if>
		</where>
		order by t.pos, t.IF_STAR,t.OPERATOR,t.rk
	</select>
	
	<select id="getPersonTaskByPersonIds" resultType="hashmap">
		select * from JM_JWGSHETJW_ALLOPERATOR_JK_V t
		where t.OPERATOR in
		<foreach collection="personIds" open="(" close=")" separator="," item="id">
			#{id}
		</foreach>
		<if test="isPart == 1">
			and if_off = 0
		</if>
		order by  t.pos, t.IF_STAR,t.OPERATOR,t.rk
	</select>
		
	<select id="getFlightTaskData" resultType="hashmap">
		select * from jm_jwgshet_flight_number_jk_v t 
		order by t.order_id, t.name
	</select>
	
	<select id="getDefSwitch" resultType="integer">
		<![CDATA[
			select
			   min(case
			       when to_date(to_char(sysdate,'yyyy-mm-dd ')||start_time,'yyyy-mm-dd hh24mi') <= sysdate and 
			            to_date(to_char(sysdate,'yyyy-mm-dd ')||end_time,'yyyy-mm-dd hh24mi') >= sysdate
			       then 0
			       else 1
			       end) state
			from JM_BDC_BUZY_TIME
		]]>
	</select>
	
	<select id="getInOutFlight" resultType="com.neusoft.prss.taskmonitor.entity.TaskFlightInfo">
		select
		     --进港航班号
		     t1.flight_number as inFltNum,
		     --出港航班号
		     t3.flight_number as outFltNum,
		     --机号
		     nvl(t1.aircraft_number, t3.aircraft_number) as aircraftNumber,
		     --机型
		     (select icao_code
		             from DIM_ACTYPE
		            where TODB_ACTYPE_CODE = nvl(t1.ACTTYPE_CODE,t3.ACTTYPE_CODE)) as acttypeCode,
		     --进港机位
		     t1.actstand_code inActstandCode,
		     --出港机位
		     t3.actstand_code outActstandCode,
		     -- 登机口
		     t3.gate,
		     -- 行李转盘
		     t1.bag_crsl bag,
		     to_daytime(t1.sta) as sta,
		     to_daytime(t1.eta) as eta,
		     to_daytime(t1.ata) as ata,
		     to_daytime(t3.std) as std,
		     to_daytime(t3.etd) as etd,
		     to_daytime(t3.atd) as atd,
		     to_daytime(t4.tsat) as tsat,
		     --VIP
		     case
		       when t1.mg_flag = '1' then
		        (select text
		           from dim_common_dict
		          where type = 'vipFlag'
		            and value = '3')
		       when t1.mg_flag = '2' then
		        (select text
		           from dim_common_dict
		          where type = 'vipFlag'
		            and value = '4')
		       when t1.vip_flag = '1' then
		        (select text
		           from dim_common_dict
		          where type = 'vipFlag'
		            and value = '1')
		       when t1.vip_flag = '2' then
		        (select text
		           from dim_common_dict
		          where type = 'vipFlag'
		            and value = '2')
		       when t1.ssg_flag is not null then
		        (select text
		           from dim_common_dict
		          where type = 'vipFlag'
		            and value = '5')
		       else
		        null
		     end as inVipFlag,
		     case
		       when t3.mg_flag = '1' then
		        (select text
		           from dim_common_dict
		          where type = 'vipFlag'
		            and value = '3')
		       when t3.mg_flag = '2' then
		        (select text
		           from dim_common_dict
		          where type = 'vipFlag'
		            and value = '4')
		       when t3.vip_flag = '1' then
		        (select text
		           from dim_common_dict
		          where type = 'vipFlag'
		            and value = '1')
		       when t3.vip_flag = '2' then
		        (select text
		           from dim_common_dict
		          where type = 'vipFlag'
		            and value = '2')
		       when t3.ssg_flag is not null then
		        (select text
		           from dim_common_dict
		          where type = 'vipFlag'
		            and value = '5')
		       else
		        null
		     end as outVipFlag,
		     --登机开始时间
		     to_daytime(t3.BRD_BTM) as brdBtm,
		     --登机结束时间
		     to_daytime(t3.BRD_ETM) as brdEtm,
		     -- 进港人数
		     t5.pax_num dPaxNum,
		     -- 出港人数
		     t6.pax_num iPaxNum
		from fd_flt_info t1
		join fd_flt_iorel t2
		  on (t2.in_fltid = t1.fltid)
		join fd_flt_info t3
		  on (t2.out_fltid = t3.fltid)
		left join fd_flt_cla_airground t4
		  on (t3.fltid = t4.fltid)
		left join fd_flt_cla_passenger t5
		  on (t1.fltid = t5.fltid)
		left join fd_flt_cla_passenger t6
		  on (t3.fltid = t6.fltid)
	     where t1.fltid = #{fltid} or t3.fltid = #{fltid}
	</select>	
	
	
	<select id="getInFlight" resultType="com.neusoft.prss.taskmonitor.entity.TaskFlightInfo">
	   select
		     --进港航班号
		     t1.flight_number as inFltNum,
		     --机号
		     t1.aircraft_number as aircraftNumber,
		     --机型
		     (select icao_code
		             from DIM_ACTYPE
		            where TODB_ACTYPE_CODE = t1.ACTTYPE_CODE) as acttypeCode,
		     --进港机位
		     t1.actstand_code inActstandCode,
		     -- 行李转盘
		     t1.bag_crsl bag,
		     to_daytime(t1.sta) as sta,
		     to_daytime(t1.eta) as eta,
		     to_daytime(t1.ata) as ata,
		     --VIP
		     case
		       when t1.mg_flag = '1' then
		        (select text
		           from dim_common_dict
		          where type = 'vipFlag'
		            and value = '3')
		       when t1.mg_flag = '2' then
		        (select text
		           from dim_common_dict
		          where type = 'vipFlag'
		            and value = '4')
		       when t1.vip_flag = '1' then
		        (select text
		           from dim_common_dict
		          where type = 'vipFlag'
		            and value = '1')
		       when t1.vip_flag = '2' then
		        (select text
		           from dim_common_dict
		          where type = 'vipFlag'
		            and value = '2')
		       when t1.ssg_flag is not null then
		        (select text
		           from dim_common_dict
		          where type = 'vipFlag'
		            and value = '5')
		       else
		        null
		     end as inVipFlag,
		     -- 进港人数
		     t5.pax_num dPaxNum
		from fd_flt_info t1
		left join fd_flt_cla_passenger t5
		  on (t1.fltid = t5.fltid)
	     where t1.fltid = #{fltid}
	</select>	
	
	<select id="getOutFlight" resultType="com.neusoft.prss.taskmonitor.entity.TaskFlightInfo">
		   --点击出港
		   select   
	         --出港航班号
	         t3.flight_number as outFltNum,
	         --机号
	         t3.aircraft_number as aircraftNumber,
	         --机型
	         (select icao_code
		             from DIM_ACTYPE
		            where TODB_ACTYPE_CODE = t3.ACTTYPE_CODE) as acttypeCode,
	         --出港机位
	         t3.actstand_code outActstandCode,
	         -- 登机口
	         t3.gate,
	         to_daytime(t3.std) as std,
	         to_daytime(t3.etd) as etd,
	         to_daytime(t3.atd) as atd,
	         to_daytime(t4.tsat) as tsat,
	         --VIP
	         case
	           when t3.mg_flag = '1' then
	            (select text
	               from dim_common_dict
	              where type = 'vipFlag'
	                and value = '3')
	           when t3.mg_flag = '2' then
	            (select text
	               from dim_common_dict
	              where type = 'vipFlag'
	                and value = '4')
	           when t3.vip_flag = '1' then
	            (select text
	               from dim_common_dict
	              where type = 'vipFlag'
	                and value = '1')
	           when t3.vip_flag = '2' then
	            (select text
	               from dim_common_dict
	              where type = 'vipFlag'
	                and value = '2')
	           when t3.ssg_flag is not null then
	            (select text
	               from dim_common_dict
	              where type = 'vipFlag'
	                and value = '5')
	           else
	            null
	         end as outVipFlag,
	         --登机开始时间
	         to_daytime(t3.BRD_BTM) as brdBtm,
	         --登机结束时间
	         to_daytime(t3.BRD_ETM) as brdEtm,
	         -- 出港人数
	         t6.pax_num iPaxNum
	    from fd_flt_info t3
	    left join fd_flt_cla_airground t4
	      on (t3.fltid = t4.fltid)
	    left join fd_flt_cla_passenger t6
	      on (t3.fltid = t6.fltid)
	     where t3.fltid = #{fltid}
	</select>	

	
	<select id="highTasks" resultType="string">
		select a.id
		from jm_task a left join jm_task b on a.fltid = b.fltid
		where b.id = #{taskId}
	</select>
	
	<select id="getIfTimeConflict" resultType="hashmap">
		<![CDATA[
			select * from
			(select '新拖动任务时段(' || t1.e_start_tm || '-' || t1.e_end_tm || ')与该人员保障任务时段(' ||
			       t2.e_start_tm || '-' || t2.e_end_tm || ')冲突' as msg,
			       to_char(wm_concat(t1.id) over(partition by '')) || ',${taskId}'  as ids
			  from (select e_start_tm, e_end_tm, id
			          from jm_task
			         where operator = #{operatorId}
			           and job_state in ('1', '2')
			           and e_start_tm is not null
			           and e_end_tm is not null) t1
			  join (select e_start_tm, e_end_tm
			          from jm_task
			         where e_start_tm is not null
			           and e_end_tm is not null
			           and id = #{taskId}) t2
			    on (t1.e_end_tm > t2.e_start_tm and t1.e_start_tm < t2.e_end_tm)
			 ) where rownum = 1
		]]>
	</select>
	
	<select id="getIfCarEnough" resultType="integer">
		<![CDATA[
			select case
		       --符合最后的航班才判断，否则返回1
		         when (select count(*) c
		                 from jm_task mt
		                 left join jm_task t
		                   on mt.fltid = t.fltid
		                where t.id = #{taskId}
		                  and mt.job_state in ('0', '6')
						  and mt.del_flag='0'
		                  and mt.id != #{taskId}) = 0 then
		         --混装航班看国际人数和国内人数
		          case
		            when FLT_ATTR_CODE = 'M' and
		                 (nvl((select sum(nvl(t3.seating_num, 110))
		                        from jm_task t1
		                        left join (select vehicle_number, oper_id
		                                    from (select vehicle_number,
		                                                 oper_id,
		                                                 row_number() over(partition by oper_id order by oper_bound_date desc) as row_num
		                                            from bill_vehicle_bound
		                                           where status = 1)
		                                   where row_num = 1) t2
		                          on (oper_id = operator)
		                        left join jm_device t3
		                          on (t3.inner_number = t2.vehicle_number)
		                       where job_type = 'JWBDCbdc'
		                         and fltid = #{fltid}
		                         and del_flag = 0
		                         and job_state <> '5'
		                         and name like '%国内%'
		                         and id <> #{taskId}),
		                      0) + nvl((select nvl(t3.seating_num, 110)
		                                    from (select vehicle_number, oper_id
		                                            from (select vehicle_number,
		                                                         oper_id,
		                                                         row_number() over(partition by oper_id order by oper_bound_date desc) as row_num
		                                                    from bill_vehicle_bound
		                                                   where status = 1)
		                                           where row_num = 1
		                                             and oper_id = #{operatorId}) t2
		                                    join jm_device t3
		                                      on (t3.inner_number = t2.vehicle_number)),
		                                  110) - nvl(D_PAX_NUM, 0) < 0) then
		             1
		            when FLT_ATTR_CODE = 'M' and
		                 (nvl((select sum(nvl(t3.seating_num, 110))
		                        from jm_task t1
		                        left join (select vehicle_number, oper_id
		                                    from (select vehicle_number,
		                                                 oper_id,
		                                                 row_number() over(partition by oper_id order by oper_bound_date desc) as row_num
		                                            from bill_vehicle_bound
		                                           where status = 1)
		                                   where row_num = 1) t2
		                          on (oper_id = operator)
		                        left join jm_device t3
		                          on (t3.inner_number = t2.vehicle_number)
		                       where job_type = 'JWBDCbdc'
		                         and del_flag = 0
		                         and job_state <> '5'
		                         and fltid = #{fltid}
		                         and name like '%国际%'
		                         and id <> #{taskId}),
		                      0) + nvl((select nvl(t3.seating_num, 110)
		                                    from (select vehicle_number, oper_id
		                                            from (select vehicle_number,
		                                                         oper_id,
		                                                         row_number() over(partition by oper_id order by oper_bound_date desc) as row_num
		                                                    from bill_vehicle_bound
		                                                   where status = 1)
		                                           where row_num = 1
		                                             and oper_id = #{operatorId}) t2
		                                    join jm_device t3
		                                      on (t3.inner_number = t2.vehicle_number)),
		                                  110) - nvl(I_PAX_NUM, 0) < 0) then
		             1
		          --进港航班看旅客人数
		            when substr(in_out_flag, 1, 1) = 'A' and
		                 (nvl((select sum(nvl(t3.seating_num, 110))
		                        from jm_task t1
		                        left join (select vehicle_number, oper_id
		                                    from (select vehicle_number,
		                                                 oper_id,
		                                                 row_number() over(partition by oper_id order by oper_bound_date desc) as row_num
		                                            from bill_vehicle_bound
		                                           where status = 1)
		                                   where row_num = 1) t2
		                          on (oper_id = operator)
		                        left join jm_device t3
		                          on (t3.inner_number = t2.vehicle_number)
		                       where job_type = 'JWBDCbdc'
		                         and del_flag = 0
		                         and job_state <> '5'
		                         and fltid = #{fltid}
		                         and id <> #{taskId}),
		                      0) + nvl((select nvl(t3.seating_num, 110)
		                                   from (select vehicle_number, oper_id
		                                           from (select vehicle_number,
		                                                        oper_id,
		                                                        row_number() over(partition by oper_id order by oper_bound_date desc) as row_num
		                                                   from bill_vehicle_bound
		                                                  where status = 1)
		                                          where row_num = 1
		                                            and oper_id = #{operatorId}) t2
		                                   join jm_device t3
		                                     on (t3.inner_number = t2.vehicle_number)),
		                                 110) - nvl(PAX_NUM, 0) < 0) then
		             1
		          --出港航班看值机人数
		            when substr(in_out_flag, 1, 1) = 'D' and
		                 (nvl((select sum(nvl(t3.seating_num, 110))
		                        from jm_task t1
		                        left join (select vehicle_number, oper_id
		                                    from (select vehicle_number,
		                                                 oper_id,
		                                                 row_number() over(partition by oper_id order by oper_bound_date desc) as row_num
		                                            from bill_vehicle_bound
		                                           where status = 1)
		                                   where row_num = 1) t2
		                          on (oper_id = operator)
		                        left join jm_device t3
		                          on (t3.inner_number = t2.vehicle_number)
		                       where job_type = 'JWBDCbdc'
		                         and del_flag = 0
		                         and job_state <> '5'
		                         and fltid = #{fltid}
		                         and id <> #{taskId}),
		                      0) + nvl((select nvl(t3.seating_num, 110)
		                                   from (select vehicle_number, oper_id
		                                           from (select vehicle_number,
		                                                        oper_id,
		                                                        row_number() over(partition by oper_id order by oper_bound_date desc) as row_num
		                                                   from bill_vehicle_bound
		                                                  where status = 1)
		                                          where row_num = 1
		                                            and oper_id = #{operatorId}) t2
		                                   join jm_device t3
		                                     on (t3.inner_number = t2.vehicle_number)),
		                                 110) - nvl(PCK_NUM, 0) < 0) then
		             1
		            else
		             0
		          end
		         else
		          0
		       end as change_car_id
		  from fd_flt_info tb1
		  left join fd_flt_cla_passenger tb2
		    on (tb1.fltid = tb2.fltid)
		 where tb1.fltid = #{fltid}
		]]>
	</select>
	
	<select id="getIfOffWork" resultType="integer">
		<![CDATA[
			select max(flag) flag from (
				select case when e_start_tm < to_char(sysdate,'yyyy-MM-dd HH24:mi:ss') and  
				       to_char(sysdate + (to_date(rte_end_tm,'yyyy-MM-dd HH24:mi:ss') - to_date(e_start_tm,'yyyy-MM-dd HH24:mi:ss')),'yyyy-MM-dd HH24:mi:ss') > offtm then 1 
				       when e_start_tm >= to_char(sysdate,'yyyy-MM-dd HH24:mi:ss') and rte_end_tm > offTm then 1 
				       else 0
				       end flag
				from (
				select  greatest(etime1,nvl(etime2,'0'),nvl(etime3,'0')) offTm ,b.e_start_tm,b.rte_end_tm
				from am_worker_plan a ,jm_task b
				where pdate in (to_char(sysdate - 1,'yyyy-MM-dd'),to_char(sysdate,'yyyy-MM-dd'),to_char(sysdate + 1,'yyyy-MM-dd'))
				and worker_id = #{operatorId}
				and ((to_char(sysdate,'yyyy-MM-dd HH24:mi:ss') >= stime1 and to_char(sysdate,'yyyy-MM-dd HH24:mi:ss') <= etime1) or 
				    (to_char(sysdate,'yyyy-MM-dd HH24:mi:ss') >= stime2 and to_char(sysdate,'yyyy-MM-dd HH24:mi:ss') <= etime2) or
				    (to_char(sysdate,'yyyy-MM-dd HH24:mi:ss') >= stime3 and to_char(sysdate,'yyyy-MM-dd HH24:mi:ss') <= etime3))
				and b.id = #{taskId}
				)
				union all select 0 from dual
			)
		]]>
	</select>
	
	<select id="getJmTask"  resultType="hashmap">
		select * from jm_task where id = #{taskId}
	</select>
	
	<select id="getRules"  resultType="hashmap">
		<![CDATA[
			SELECT distinct
				A.ID as ruleId, 
				A.DESCRIPTION as ruleName
			  FROM RM_RULE_INFO A, JM_RULE_PROC_REL B, WF_PROCESS C
			 WHERE A.ID = B.RULE_ID
			   AND B.PROC_ID = C.ID
			   AND C.JOB_KIND = 'JWGSHETJW'
			   AND C.JOB_TYPE = #{jobType} --作业类型
			   AND A.IF_MANUAL = 1
			   AND A.IF_VALID = 1
	   ]]>
	</select>
	<select id="getUnfinishTaskCount" resultType="integer">
		<![CDATA[
			select count(1)   from jm_task
	     	where job_state in ('1', '2')  and operator = #{operator}
     	]]>
	</select>
	<insert id="saveWorkerPos" parameterType="hashmap">
		<![CDATA[
			insert into am_worker_pos
			(
				ID,
				WORKER_ID,
				POS_TYPE,
				POS,
				UPDATE_TM,
				OPERATOR,
				OFFICE_ID
			)
			values
			(
				am_worker_pos_s.nextval,
				#{workerId},
				#{posType},
				#{pos},
				to_char(sysdate,'yyyy-mm-dd hh24:mi:ss'),
				#{operator},
				#{officeId}
			)
		]]>
	</insert>
	
	<select id="getShiftEndTimes" resultType="com.alibaba.fastjson.JSONObject">
		select etime "etime"
		  from dim_shifts_type a,sys_user b
		 where a.creator_id = b.id(+) 
		   and shifts_name is not null 
           and stime is not null 
           and etime is not null
           and (b.office_id = #{officeId})
	</select>
	
	<select id="getWorkerShiftsInfo" resultType="com.alibaba.fastjson.JSONObject">
		select b.name,
		       a.worker_id,
		       a.shifts_id,
		       a.stime1_label,
		       a.etime1_label,
		       a.stime2_label,
		       a.etime2_label,
		       a.stime3_label,
		       a.etime3_label
		  from am_worker_plan a, sys_user b
		 where a.worker_id = b.id
		   and a.worker_id in (${workerId})
		   and a.pdate = to_char(sysdate, 'yyyy-MM-dd')
	</select>
	
	<insert id="setOverWorkTime">
		insert into am_worker_plan
		  (ID,
		   OFFICE_ID,
		   WORKER_ID,
		   PDATE,
		   STIME1,
		   ETIME1,
		   BUSY_INTERVAL,
		   IDLE_INTERVAL,
		   SORTNUM,
		   SHIFTS_TYPE,
		   STIME1_LABEL,
		   ETIME1_LABEL,
		   SHIFTS_ID)
		values
		  (am_worker_plan_s.nextval,
		   #{officeId},
		   #{workerId},
		   to_char(sysdate, 'yyyy-MM-dd'),
		   #{startTime},
		   #{endTime},
		   0,
		   0,
		   1,
		   0,
		   #{start},
		   #{end},
		   -1)
	</insert>
	
	<select id="getNodeIds" resultType="integer" >
		select node_id
		  from wf_process_node
		 where process_id = (select proc_id from jm_task where id = #{taskId})
		 order by node_order
	</select>
	
	<select id="getIfCarDetail" resultType="hashmap" >
		select id,job_type, ACTSTAND_CODE as jw, ACTTYPE_CODE jx, ALN_2CODE hs
		  from jm_task a, fd_flt_info b
		 where a.fltid = b.fltid
		   and a.job_kind = 'JWGSHETJW'
		   and a.id = #{taskId}
	</select>
	
	<select id="getIfCarHaveAptitudeOne" resultType="int" >
	select count(*) from (
		select m.worker_id, max(m.primary_flag) primary_flag
	       from (select id, device_id, plate_number, case when aptutude1 in ('JWQYCbltz','JWQYCygtz') 
	       then 'JWQYCtz' else null end as aptutude1,jx_limit1, jw_limit1, hs_limit1,
	       case when aptutude2 in ('JWQYCblt','JWQYCygt')  
	       then 'JWQYCtc' else null end as aptutude2, jx_limit2, jw_limit2, hs_limit2,
	       operator, update_time
	       from am_divice_aptitude_conf) a,
	       am_division_info           m,
	       am_division_jw_detail_v n1,
	       am_division_jx_detail_v n2,
	       am_division_hs_detail_v n3,
	       am_office_limit_conf       l,
	       bill_vehicle_bound         x,
	       dim_restype                y
	 where m.aptitude_id = #{JOB_TYPE}
	 and m.worker_id in
	   <foreach collection="idList" index="index" item="item" open="(" separator="," close=")">  
	     	#{item}  
	   </foreach>  
	   and m.id = n1.id(+)
	   and m.id = n2.id(+)
	   and m.id = n3.id(+)
	   and n1.element_code(+) = #{JW}
	   and n2.element_code(+) = #{JX}
	   and n3.element_code(+) = #{HS}
	   and l.office_id = m.office_id
	   and (y.bind_conf = 0 or x.oper_id = m.worker_id)
	   and x.status(+) = 1
	   and x.vehicle_number = a.device_id(+)
	   and y.restype = #{JOB_TYPE}
	   and ((l.jw_limit = 0 or (n1.element_code = #{JW})) and
	       (l.jx_limit = 0 or (n2.element_code = #{JX})) and
	       (l.hs_limit = 0 or (n3.element_code = #{HS})))
	   and ((l.jw_limit = 0 or (n1.element_code = #{JW})) and
       (l.jx_limit = 0 or (n2.element_code = #{JX})) and
       (l.hs_limit = 0 or (n3.element_code = #{HS})))
       and (y.bind_conf in (0, 1) or
       ((a.aptutude1 = #{JOB_TYPE} and
       (a.jw_limit1 is null or
       ',' || a.jw_limit1 || ',' not like '%,' || #{JW} || ',%') and
       (a.jx_limit1 is not null and
       ',' || a.jx_limit1 || ',' like '%,' || #{JX} || ',%') and
       (a.hs_limit1 is null or
       ',' || a.hs_limit1 || ',' not like '%,' || #{HS} || ',%')) or
       (a.aptutude2 = #{JOB_TYPE} and
       (a.jw_limit2 is null or
       ',' || a.jw_limit2 || ',' not like '%,' || #{JW} || ',%') and
       (a.jx_limit2 is not null and
       ',' || a.jx_limit2 || ',' like '%,' || #{JX} || ',%') and
       (a.hs_limit2 is null or
       ',' || a.hs_limit2 || ',' not like '%,' || #{HS} || ',%'))))
       group by worker_id
	)
	</select>
	
	<select id="getIfCarHaveAptitudeTwo" resultType="int" >
		select count(*) from (
		select m.worker_id, max(m.primary_flag) primary_flag
	    from am_divice_aptitude_conf    a,
	       am_division_info           m,
	       am_division_jw_detail_v n1,
	       am_division_jx_detail_v n2,
	       am_division_hs_detail_v n3,
	       am_office_limit_conf       l,
	       bill_vehicle_bound         x,
	       dim_restype                y
	   where m.aptitude_id = #{JOB_TYPE}
	     and m.worker_id in
	     <foreach collection="idList" index="index" item="item" open="(" separator="," close=")">  
	     	#{item}  
	     </foreach>  
	     and m.id = n1.id(+)
	     and m.id = n2.id(+)
	     and m.id = n3.id(+)
	     and n1.element_code(+) = #{JW}
	     and n2.element_code(+) = #{JX}
	     and n3.element_code(+) = #{HS}
	     and l.office_id = m.office_id
	     and (y.bind_conf = 0 or x.oper_id = m.worker_id)
	     and x.status(+) = 1
	     and x.vehicle_number = a.device_id(+)
	     and y.restype = #{JOB_TYPE}
	       and ((l.jw_limit = 0 or (n1.element_code = #{JW})) and
	       (l.jx_limit = 0 or (n2.element_code = #{JX})) and
	       (l.hs_limit = 0 or (n3.element_code = #{HS})))
	       and ((l.jw_limit = 0 or (n1.element_code = #{JW})) and
       (l.jx_limit = 0 or (n2.element_code = #{JX})) and
       (l.hs_limit = 0 or (n3.element_code = #{HS})))
       and (y.bind_conf in (0, 1) or
       ((a.aptutude1 = #{JOB_TYPE} and
       (a.jw_limit1 is null or
       ',' || a.jw_limit1 || ',' not like '%,' || #{JW} || ',%') and
       (a.jx_limit1 is not null and
       ',' || a.jx_limit1 || ',' like '%,' || #{JX} || ',%') and
       (a.hs_limit1 is null or
       ',' || a.hs_limit1 || ',' not like '%,' || #{HS} || ',%')) or
       (a.aptutude2 = #{JOB_TYPE} and
       (a.jw_limit2 is null or
       ',' || a.jw_limit2 || ',' not like '%,' || #{JW} || ',%') and
       (a.jx_limit2 is not null and
       ',' || a.jx_limit2 || ',' like '%,' || #{JX} || ',%') and
       (a.hs_limit2 is null or
       ',' || a.hs_limit2 || ',' not like '%,' || #{HS} || ',%'))))
       group by worker_id
	)
	</select>
</mapper>